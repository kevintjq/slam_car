# 行为树导航器配置
bt_navigator:
  ros__parameters:
    global_frame: map  # 全局参考坐标系
    robot_base_frame: base_link  # 机器人基坐标系
    # odom_topic: /odom  # 里程计话题（已注释，使用默认值）
    bt_loop_duration: 100  # 行为树循环周期（毫秒）
    default_server_timeout: 100  # 默认动作服务器超时时间（毫秒）
    wait_for_service_timeout: 1000  # 服务等待超时时间（毫秒）
    action_server_result_timeout: 900.0  # 动作服务器结果超时时间（秒）
    navigators: ["navigate_to_pose", "navigate_through_poses"]  # 导航器插件列表
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"  # 单目标点导航插件
    navigate_through_poses:
      plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"  # 多目标点导航插件
    # 默认行为树 XML 文件用于导航，除非被重写
    # plugin_lib_names: []  # 自定义行为树插件列表（默认空）
    error_code_names:
      - compute_path_error_code  # 路径计算错误码
      - follow_path_error_code  # 路径跟随错误码

# 控制器服务器配置
controller_server:
  ros__parameters:
    # controller server parameters (see Controller Server for more info)
    use_sim_time: True
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    progress_checker_plugins: ["progress_checker"]  # progress_checker_plugin: "progress_checker" For Humble and older
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.05 #############################
      yaw_goal_tolerance: 0.25
      stateful: True

    # DWB controller parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: -0.15 #####0.0   负数可倒车
      min_vel_y: 0.0 
      max_vel_x: 0.30 #####0.26
      max_vel_y: 0.0
      max_vel_theta: 0.8 #############31.0
      min_speed_xy: 0.0
      max_speed_xy: 0.26
      min_speed_theta: 0.0
      acc_lim_x: 2.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      #vx_samples: 20 
      vx_samples: 5   ########自旋
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.05 #######################
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      use_backward_motion: true ##############倒车
      use_differential_drive: true ############倒车
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]

      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      GoalAlign.scale: 24.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0


# 局部代价地图配置
local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 20.0  # 局部地图更新频率（Hz）
      publish_frequency: 20.0  # 局部地图发布频率（Hz）
      global_frame: map  # 全局坐标系
      robot_base_frame: base_link  # 机器人基坐标系
      rolling_window: true  # 启用滚动窗口
      width: 3  # 地图宽度（m）
      height: 3  # 地图高度（m）
      resolution: 0.05  # 地图分辨率（m）
      robot_radius: 0.13  # 机器人半径（m）
      plugins: ["voxel_layer", "inflation_layer"]  # 代价地图插件
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"  # 膨胀层插件
        cost_scaling_factor: 2.58  # 成本缩放因子
        inflation_radius: 1.75 # 膨胀半径（m）
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"  # 体视素层插件
        enabled: false  # 启用体视素层
        publish_voxel_map: false  # 发布体视素地图
        origin_z: 0.0  # Z 轴原点（m）
        z_resolution: 0.05  # Z 轴分辨率（m）
        z_voxels: 16  # Z 轴体视素数量
        max_obstacle_height: 2.0  # 最大障碍物高度（m）
        mark_threshold: 0  # 标记阈值
        observation_sources: scan  # 观测源
        scan:
          topic: /scan  # 激光雷达话题
          max_obstacle_height: 2.0  # 最大障碍物高度（m）
          clearing: True  # 清除障碍物
          marking: True  # 标记障碍物
          data_type: "LaserScan"  # 数据类型
          raytrace_max_range: 3.0  # 最大射线追踪范围（m）
          raytrace_min_range: 0.0  # 最小射线追踪范围（m）
          obstacle_max_range: 2.5  # 最大障碍物范围（m）
          obstacle_min_range: 0.0  # 最小障碍物范围（m）
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"  # 静态层插件
        map_subscribe_transient_local: false  # 订阅瞬态局部地图
      always_send_full_costmap: false  # 始终发送完整代价地图

# 全局代价地图配置
global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0  # 全局地图更新频率（Hz）
      publish_frequency: 1.0  # 全局地图发布频率（Hz）
      global_frame: map  # 全局坐标系
      robot_base_frame: base_link  # 机器人基坐标系
      robot_radius: 0.13  # 机器人半径（m）  最初0.13
      resolution: 0.05  # 地图分辨率（m）
      track_unknown_space: true  # 跟踪未知空间
      plugins: ["static_layer","obstacle_layer", "inflation_layer"]  # 全局代价地图插件
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"  # 障碍物层插件
        enabled: True  # 启用障碍物层
        observation_sources: scan  # 观测源
        scan:
          topic: /scan  # 激光雷达话题
          max_obstacle_height: 2.0  # 最大障碍物高度（m）
          clearing: True  # 清除障碍物
          marking: True  # 标记障碍物
          data_type: "LaserScan"  # 数据类型
          raytrace_max_range: 10.0  # 最大射线追踪范围（m）
          raytrace_min_range: 0.0  # 最小射线追踪范围（m）
          obstacle_max_range: 2.5  # 最大障碍物范围（m）
          obstacle_min_range: 0.0  # 最小障碍物范围（m）
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"  # 静态层插件
        map_subscribe_transient_local: True  # 订阅瞬态局部地图
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"  # 膨胀层插件
        cost_scaling_factor: 2.58  # 成本缩放因子
        inflation_radius: 1.75 # 膨胀半径（m）
      always_send_full_costmap: True  # 始终发送完整代价地图

# 地图服务器配置（已注释，默认在启动文件中设置）
# map_server:
#   ros__parameters:
#     yaml_filename: ""  # 地图文件路径

# 地图保存配置
map_saver:
  ros__parameters:
    save_map_timeout: 5.0  # 保存地图超时时间（秒）
    free_thresh_default: 0.25  # 默认自由空间阈值
    occupied_thresh_default: 0.65  # 默认占用空间阈值
    map_subscribe_transient_local: True  # 订阅瞬态局部地图

# 规划器服务器配置
planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0  # 预期规划器频率（Hz）
    planner_plugins: ["GridBased"]  # 规划器插件
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"  # Navfn 规划器插件
      tolerance: 0.5  # 规划容差（m）
      use_astar: false  # 是否使用 A* 算法
      allow_unknown: true  # 允许未知区域

# 平滑器服务器配置
smoother_server:
  ros__parameters:
    smoother_plugins: ["simple_smoother"]  # 平滑器插件
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"  # 简单平滑器插件
      tolerance: 1.0e-10  # 平滑容差
      max_its: 1000  # 最大迭代次数
      do_refinement: True  # 是否进行路径细化

# 行为服务器配置
behavior_server:
  ros__parameters:
    local_costmap_topic: local_costmap/costmap_raw  # 局部代价地图话题
    global_costmap_topic: global_costmap/costmap_raw  # 全局代价地图话题
    local_footprint_topic: local_costmap/published_footprint  # 局部足迹话题
    global_footprint_topic: global_costmap/published_footprint  # 全局足迹话题
    cycle_frequency: 10.0  # 行为循环频率（Hz）
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]  # 行为插件
    spin:
      plugin: "nav2_behaviors/Spin"  # 自旋行为插件
    backup:
      plugin: "nav2_behaviors/BackUp"  # 后退行为插件
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"  # 按方向行驶行为插件
    wait:
      plugin: "nav2_behaviors/Wait"  # 等待行为插件
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"  # 辅助遥控行为插件
    local_frame: base_link  # 局部坐标系
    global_frame: map  # 全局坐标系
    robot_base_frame: base_link  # 机器人基坐标系
    transform_tolerance: 0.1  # 坐标变换容差（秒）
    simulate_ahead_time: 2.0  # 前向模拟时间（秒）
    max_rotational_vel: 1.5  # 最大旋转速度（rad/s）  原本为1.0
    min_rotational_vel: 0.4  # 最小旋转速度（rad/s）
    rotational_acc_lim: 3.2  # 旋转加速度限制（rad/s^2）

# 路径点跟随器配置
waypoint_follower:
  ros__parameters:
    loop_rate: 20  # 循环频率（Hz）
    stop_on_failure: false  # 失败时是否停止
    action_server_result_timeout: 900.0  # 动作服务器结果超时时间（秒）
    waypoint_task_executor_plugin: "wait_at_waypoint"  # 路径点任务执行插件
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"  # 路径点等待插件
      enabled: True  # 启用路径点等待
      waypoint_pause_duration: 200  # 路径点暂停时间（毫秒）

# 速度平滑器配置
velocity_smoother:
  ros__parameters:
    smoothing_frequency: 20.0  # 平滑频率（Hz）
    scale_velocities: False  # 是否缩放速度
    feedback: "OPEN_LOOP"  # 反馈模式（开环）
    max_velocity: [0.25, 0.0, 2.0]  # 最大速度 [x, y, theta]（m/s, m/s, rad/s）
    min_velocity: [-0.25, 0.0, -1.0]  # 最小速度 [x, y, theta]（m/s, m/s, rad/s）#####-2.0
    max_accel: [2.5, 0.0, 3.2]  # 最大加速度 [x, y, theta]（m/s^2, m/s^2, rad/s^2）
    max_decel: [-1.5, 0.0, -3.2]  # 最大减速度 [x, y, theta]（m/s^2, m/s^2, rad/s^2）
    # odom_topic: "odom"  # 里程计话题（已注释）
    odom_duration: 0.1  # 里程计持续时间（秒）
    deadband_velocity: [0.0, 0.0, 0.0]  # 速度死区 [x, y, theta]
    velocity_timeout: 1.0  # 速度超时时间（秒）

# 碰撞监测器配置
collision_monitor:
  ros__parameters:
    base_frame_id: "base_link"  # 基础坐标系
    odom_frame_id: "base_link"  # 里程计坐标系
    cmd_vel_in_topic: "cmd_vel_smoothed"  # 输入速度话题
    cmd_vel_out_topic: "cmd_vel"  # 输出速度话题
    state_topic: "collision_monitor_state"  # 状态话题
    transform_tolerance: 0.2  #坐标变换容差（秒）
    source_timeout: 1.0  # 数据源超时时间（秒）
    base_shift_correction: True  # 基础偏移校正
    stop_pub_timeout: 2.0  # 停止发布超时时间（秒）
    polygons: ["FootprintApproach"]  # 多边形区域配置
    FootprintApproach:
      type: "polygon"  # 多边形类型
      action_type: "approach"  # 动作类型（接近）
      footprint_topic: "/local_costmap/published_footprint"  # 足迹话题
      time_before_collision: 1.2  # 碰撞前时间（秒）
      simulation_time_step: 0.1  # 模拟时间步长（秒）
      min_points: 6  # 最小点数
      visualize: False  # 是否可视化
      enabled: True  # 启用多边形
    observation_sources: ["scan"]  # 观测源
    scan:
      type: "scan"  # 观测类型（激光雷达）
      topic: "scan"  # 激光雷达话题
      min_height: 0.15  # 最小高度（m）
      max_height: 2.0  # 最大高度（m）
      enabled: True  # 启用激光雷达观测